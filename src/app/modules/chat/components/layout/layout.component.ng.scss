@import 'defaults.scss';
@import '../../../../common/layout/layout.scss';

$baseChatLayoutHeight: calc(100vh - $topbarHeight);
$leftPanelFullScreenWidth: 360px;

m-chat__pageLayout {
  display: flex;
  flex-flow: row nowrap;
  width: 100%;
  max-width: 100%;
  overflow: hidden;
  height: $baseChatLayoutHeight;

  &.m-chat__pageLayout--hasTopbarAlert {
    height: calc(
      $baseChatLayoutHeight - $topbarAlertHeight--desktop
    ) !important;

    @media screen and (max-width: $max-mobile) {
      height: calc(
        $baseChatLayoutHeight - $topbarAlertHeight--mobile
      ) !important;
    }
  }

  .m-chat__pageLayoutContainer--left {
    flex: 4;
    max-width: 100%;

    @include m-theme() {
      border-right: 1px solid themed($m-borderColor--primary);
    }

    @media screen and (min-width: $layoutMin3ColWidth) {
      max-width: $leftPanelFullScreenWidth;
    }
  }

  .m-chat__pageLayoutContainer--right {
    flex: 6;
    max-width: 100%;
    min-width: 0px;

    @include m-theme() {
      border-right: 1px solid themed($m-borderColor--primary);
    }

    @media screen and (max-width: $layoutMin3ColWidth) {
      flex: 4;
    }
  }
}

/**
 * This is a hacky workaround for an issue with ALL page layouts that at the time of writing
 * that causes all pages to have an additional empty scrollable area due to the core
 * site body being positioned with a margin-top (to prevent topbar underflow). For chat,
 * we NEED the message input to be at the bottom of the visible page, and the visible page
 * should not be scrollable - just the messages. So if we do not do this then a user will have
 * to scroll down to see the chat bottom bar and have multiple scrollable areas.
 */
html:has(m-chat__pageLayout) {
  height: calc(100% - calc($topbarHeight + $topbarAlertHeight--desktop));

  &:has(.m-body__topbarAlert) {
    height: calc(100% - calc($topbarHeight + $topbarAlertHeight--mobile));
  }

  .has-v3-navbar {
    padding-bottom: unset;
  }
}
